% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TunerEAGGAX.R
\name{mlr_tuner_eagga_ablation}
\alias{mlr_tuner_eagga_ablation}
\alias{TunerEAGGAX}
\title{Multi-objective Hyperparameter Optimization, Feature Selection and Interaction and Monotonicity Constraints}
\description{
Performs joint multi-objective optimization of hyperparameters, feature selection and interaction and monotonicity
constraints of a suitable \link[mlr3:Learner]{mlr3::Learner}.

This requires an appropriate \link[mlr3:Learner]{mlr3::Learner}, that allows for selecting features, and setting interaction and
monotonicity constraints, e.g., xgboost.
}
\section{Dictionary}{

This \link{Tuner} can be instantiated via the \link[mlr3misc:Dictionary]{dictionary}
\link{mlr_tuners} or with the associated sugar function \code{\link[=tnr]{tnr()}}:

\if{html}{\out{<div class="sourceCode">}}\preformatted{TunerEAGGAX$new()
mlr_tuners$get("eagga_ablation")
tnr("eagga_ablation")
}\if{html}{\out{</div>}}
}

\section{Parameters}{

\describe{
\item{\code{select_id}}{\code{character(1)}\cr
ID of param in Learner that selects features.}
\item{\code{interaction_id}}{\code{character(1)}\cr
ID of param in Learner that sets interaction constraints.}
\item{\code{monotone_id}}{\code{character(1)}\cr
ID of param in Learner that sets monotonicity constraints.}
\item{\code{mu}}{\code{integer(1)}\cr
Population size.}
\item{\code{lambda}}{\code{integer(1)}\cr
Offspring size of each generation.}
\item{\code{crossover}}{\code{logical(1)}\cr
Whether crossover should be applied to the group structure space.}
\item{\code{mutation}}{\code{logical(1)}\cr
Whether mutation should be applied to the group structure space.}
\item{\code{detectors}}{\code{logical(1)}\cr
Whether detectors should be used.}
\item{\code{random}}{\code{logical(1)}\cr
Whether children should be sampled at random (like during initialization).}}
}

\section{Progress Bars}{

\verb{$optimize()} supports progress bars via the package \CRANpkg{progressr}
combined with a \link{Terminator}. Simply wrap the function in
\code{progressr::with_progress()} to enable them. We recommend to use package
\CRANpkg{progress} as backend; enable with \code{progressr::handlers("progress")}.
}

\section{Logging}{

All \link{Tuner}s use a logger (as implemented in \CRANpkg{lgr}) from package
\CRANpkg{bbotk}.
Use \code{lgr::get_logger("bbotk")} to access and control the logger.
}

\seealso{
Other Tuner: 
\code{\link{mlr_tuner_eagga}}
}
\concept{Tuner}
\section{Super class}{
\code{\link[mlr3tuning:Tuner]{mlr3tuning::Tuner}} -> \code{TunerEAGGAX}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TunerEAGGAX-new}{\code{TunerEAGGAX$new()}}
\item \href{#method-TunerEAGGAX-clone}{\code{TunerEAGGAX$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3tuning" data-topic="Tuner" data-id="format"><a href='../../mlr3tuning/html/Tuner.html#method-Tuner-format'><code>mlr3tuning::Tuner$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3tuning" data-topic="Tuner" data-id="help"><a href='../../mlr3tuning/html/Tuner.html#method-Tuner-help'><code>mlr3tuning::Tuner$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3tuning" data-topic="Tuner" data-id="optimize"><a href='../../mlr3tuning/html/Tuner.html#method-Tuner-optimize'><code>mlr3tuning::Tuner$optimize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3tuning" data-topic="Tuner" data-id="print"><a href='../../mlr3tuning/html/Tuner.html#method-Tuner-print'><code>mlr3tuning::Tuner$print()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TunerEAGGAX-new"></a>}}
\if{latex}{\out{\hypertarget{method-TunerEAGGAX-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TunerEAGGAX$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TunerEAGGAX-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TunerEAGGAX-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TunerEAGGAX$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
